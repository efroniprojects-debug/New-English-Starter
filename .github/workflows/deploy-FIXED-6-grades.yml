name: Deploy ABC Explorer — FIXED 6 Grades Complete Site

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  fixed-complete:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Complete cleanup
        run: |
          rm -rf * .github .gitignore README.md || true
          mkdir -p .github/workflows

      - name: Create avatar images
        run: |
          wget https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png -O avatar1.png 2>/dev/null || echo "Avatar download failed, continuing..."
          echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg==" | base64 -d > avatar2.png

      - name: Create style.css
        run: |
          cat > style.css << 'EOF'
          * { margin: 0; padding: 0; box-sizing: border-box; }
          body { 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: #333; 
            font-family: Arial, sans-serif;
            min-height: 100vh;
            direction: rtl;
          }
          .container { 
            max-width: 1000px; 
            margin: 0 auto; 
            padding: 20px; 
            background: rgba(255,255,255,0.95);
            border-radius: 20px; 
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            margin-top: 20px;
            margin-bottom: 20px;
          }
          h1 { 
            color: #667eea; 
            text-align: center; 
            margin-bottom: 30px;
            font-size: 2.5rem;
          }
          .grade-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin: 30px 0;
          }
          .grade-card {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 30px;
            border-radius: 15px;
            text-align: center;
            cursor: pointer;
            transition: transform 0.3s ease;
          }
          .grade-card:hover { transform: scale(1.05); }
          .btn { 
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white; 
            padding: 12px 25px; 
            border-radius: 25px; 
            font-weight: 600; 
            border: none; 
            margin: 8px; 
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
          }
          .btn:hover { transform: translateY(-2px); }
          .unit-container {
            background: #f8fafc;
            margin: 20px 0;
            padding: 20px;
            border-radius: 15px;
            border: 2px solid #e2e8f0;
          }
          .words-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 10px;
            margin: 15px 0;
          }
          .word-item {
            background: #e3f2fd;
            padding: 10px;
            border-radius: 8px;
            text-align: center;
            border: 1px solid #bbdefb;
          }
          EOF

      - name: Create index.html
        run: |
          cat > index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="he" dir="rtl">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>ABC Explorer - 6 כיתות מלאות</title>
            <link rel="stylesheet" href="style.css">
          </head>
          <body>
            <div class="container" id="app"></div>
            
            <script>
            // Full content data - 6 grades, complete curriculum
            const CONTENT = {
              grades: [
                {
                  id: "grade1", 
                  name: "כיתה א'",
                  color: "#FF6B6B",
                  units: [
                    {id: 1, words: ["hello", "hi", "bye", "yes", "no", "cat", "dog", "bird", "mom", "dad", "me", "you"]},
                    {id: 2, words: ["red", "blue", "green", "yellow", "black", "white", "pink", "orange", "brown", "purple", "big", "small"]},
                    {id: 3, words: ["one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "up", "down"]},
                    {id: 4, words: ["good", "bad", "happy", "sad", "hot", "cold", "fast", "slow", "new", "old", "nice", "fun"]},
                    {id: 5, words: ["eat", "drink", "sleep", "play", "run", "walk", "jump", "sit", "stand", "look", "come", "go"]},
                    {id: 6, words: ["book", "pen", "ball", "toy", "bag", "box", "cup", "car", "house", "tree", "sun", "moon"]}
                  ]
                },
                {
                  id: "grade2", 
                  name: "כיתה ב'",
                  color: "#4ECDC4",
                  units: [
                    {id: 1, words: ["animal", "elephant", "lion", "tiger", "bear", "wolf", "fox", "rabbit", "mouse", "snake", "frog", "butterfly"]},
                    {id: 2, words: ["flower", "rose", "tree", "grass", "leaf", "garden", "plant", "grow", "water", "soil", "seed", "root"]},
                    {id: 3, words: ["country", "city", "town", "village", "street", "road", "house", "building", "bridge", "tower", "castle", "church"]},
                    {id: 4, words: ["ocean", "sea", "river", "lake", "pond", "beach", "sand", "wave", "fish", "boat", "swim", "dive"]},
                    {id: 5, words: ["mountain", "hill", "valley", "forest", "desert", "cave", "rock", "stone", "earth", "sky", "star", "planet"]},
                    {id: 6, words: ["weather", "sunny", "cloudy", "rainy", "snowy", "windy", "storm", "thunder", "lightning", "rainbow", "fog", "mist"]}
                  ]
                },
                {
                  id: "grade3", 
                  name: "כיתה ג'",
                  color: "#45B7D1",
                  units: [
                    {id: 1, words: ["family", "parent", "mother", "father", "sister", "brother", "grandma", "grandpa", "aunt", "uncle", "cousin", "relative"]},
                    {id: 2, words: ["school", "classroom", "teacher", "student", "lesson", "homework", "test", "grade", "learn", "study", "read", "write"]},
                    {id: 3, words: ["food", "breakfast", "lunch", "dinner", "snack", "hungry", "full", "delicious", "sweet", "sour", "salty", "bitter"]},
                    {id: 4, words: ["clothes", "wear", "dress", "shirt", "pants", "shoes", "hat", "coat", "warm", "cold", "clean", "dirty"]},
                    {id: 5, words: ["time", "hour", "minute", "second", "clock", "watch", "early", "late", "fast", "slow", "begin", "end"]},
                    {id: 6, words: ["work", "job", "office", "factory", "store", "worker", "boss", "money", "earn", "buy", "sell", "pay"]}
                  ]
                },
                {
                  id: "grade4", 
                  name: "כיתה ד'",
                  color: "#96CEB4",
                  units: [
                    {id: 1, words: ["health", "sick", "healthy", "doctor", "medicine", "hospital", "hurt", "pain", "strong", "weak", "rest", "exercise"]},
                    {id: 2, words: ["travel", "trip", "vacation", "visit", "go", "come", "leave", "arrive", "far", "near", "map", "direction"]},
                    {id: 3, words: ["sport", "game", "play", "team", "win", "lose", "run", "jump", "throw", "catch", "kick", "hit"]},
                    {id: 4, words: ["music", "song", "sing", "dance", "instrument", "guitar", "piano", "drum", "loud", "quiet", "listen", "hear"]},
                    {id: 5, words: ["art", "draw", "paint", "picture", "color", "brush", "paper", "canvas", "beautiful", "ugly", "create", "make"]},
                    {id: 6, words: ["technology", "computer", "phone", "internet", "email", "website", "program", "app", "digital", "modern", "new", "old"]}
                  ]
                },
                {
                  id: "grade5", 
                  name: "כיתה ה'",
                  color: "#FFEAA7",
                  units: [
                    {id: 1, words: ["emotion", "happy", "sad", "angry", "scared", "excited", "surprised", "calm", "nervous", "proud", "shy", "confident"]},
                    {id: 2, words: ["transportation", "car", "bus", "train", "plane", "bike", "walk", "drive", "fly", "fast", "slow", "traffic", "road"]},
                    {id: 3, words: ["communication", "talk", "speak", "say", "tell", "ask", "answer", "listen", "hear", "understand", "explain", "describe"]},
                    {id: 4, words: ["friendship", "friend", "buddy", "pal", "kind", "nice", "helpful", "caring", "share", "trust", "loyal", "honest"]},
                    {id: 5, words: ["adventure", "explore", "discover", "journey", "trip", "exciting", "dangerous", "brave", "careful", "safe", "risky", "fun"]},
                    {id: 6, words: ["science", "experiment", "discover", "learn", "study", "research", "fact", "theory", "prove", "test", "result", "conclusion"]}
                  ]
                },
                {
                  id: "grade6", 
                  name: "כיתה ו'",
                  color: "#DDA0DD",
                  units: [
                    {id: 1, words: ["environment", "nature", "protect", "save", "clean", "pollution", "recycle", "green", "earth", "planet", "future", "care"]},
                    {id: 2, words: ["celebration", "party", "birthday", "holiday", "festival", "gift", "surprise", "fun", "joy", "laugh", "smile", "dance"]},
                    {id: 3, words: ["problem", "solution", "solve", "fix", "help", "difficult", "easy", "challenge", "try", "succeed", "fail", "learn"]},
                    {id: 4, words: ["creativity", "imagination", "idea", "think", "dream", "invent", "create", "original", "unique", "special", "different", "new"]},
                    {id: 5, words: ["responsibility", "duty", "task", "job", "work", "important", "careful", "serious", "trust", "depend", "reliable", "honest"]},
                    {id: 6, words: ["achievement", "success", "goal", "dream", "work", "try", "practice", "improve", "better", "best", "proud", "happy"]}
                  ]
                }
              ]
            };

            // Profile data
            let PROFILE = {
              name: "תלמיד מצוין",
              xp: 150,
              currentGrade: "grade1",
              completedUnits: [],
              rewards: []
            };

            // Application state
            let currentView = 'home';
            let currentGrade = null;

            // Main render function
            function render() {
              const app = document.getElementById('app');
              
              switch(currentView) {
                case 'home':
                  renderHome(app);
                  break;
                case 'grade':
                  renderGrade(app, currentGrade);
                  break;
                case 'profile':
                  renderProfile(app);
                  break;
                default:
                  renderHome(app);
              }
            }

            function renderHome(container) {
              container.innerHTML = `
                <h1>🎓 ABC English Explorer</h1>
                <div style="text-align: center; margin: 20px 0; padding: 20px; background: linear-gradient(135deg, #4CAF50, #45a049); color: white; border-radius: 15px;">
                  <h2>📚 כל 6 הכיתות מוכנות ללמידה!</h2>
                  <p style="margin-top: 10px;">כל כיתה מכילה 6 יחידות עם 12 מילים כל אחת = 432 מילים סה"כ</p>
                </div>
                
                <div class="grade-grid">
                  ${CONTENT.grades.map(grade => `
                    <div class="grade-card" onclick="showGrade('${grade.id}')" style="background: linear-gradient(135deg, ${grade.color}, ${adjustColor(grade.color)});">
                      <div style="font-size: 4rem; margin-bottom: 15px;">📖</div>
                      <h2>${grade.name}</h2>
                      <p style="margin: 10px 0;">6 יחידות לימוד</p>
                      <p style="background: rgba(255,255,255,0.2); padding: 10px; border-radius: 10px;">72 מילים חדשות</p>
                    </div>
                  `).join('')}
                </div>
                
                <div style="text-align: center; margin-top: 30px;">
                  <button class="btn" onclick="showProfile()">👤 פרופיל אישי</button>
                  <button class="btn" onclick="showStats()">📊 סטטיסטיקות</button>
                </div>
              `;
            }

            function renderGrade(container, gradeId) {
              const grade = CONTENT.grades.find(g => g.id === gradeId);
              if (!grade) return;

              container.innerHTML = `
                <h1>📚 ${grade.name}</h1>
                <div style="text-align: center; margin: 20px 0;">
                  <button class="btn" onclick="showHome()" style="background: #ff4757;">🏠 חזור לדף הבית</button>
                </div>
                
                <div style="background: ${grade.color}20; padding: 20px; border-radius: 15px; margin: 20px 0; text-align: center;">
                  <h3>📖 ${grade.units.length} יחידות לימוד</h3>
                  <p>כל יחידה מכילה 12 מילים לתרגול ולמידה</p>
                </div>
                
                ${grade.units.map(unit => `
                  <div class="unit-container">
                    <h3 style="color: ${grade.color}; margin-bottom: 15px;">📝 יחידה ${unit.id}</h3>
                    
                    <div class="words-grid">
                      ${unit.words.map(word => `
                        <div class="word-item" onclick="pronounceWord('${word}')" style="cursor: pointer;">
                          ${word}
                        </div>
                      `).join('')}
                    </div>
                    
                    <div style="margin-top: 20px; text-align: center;">
                      <button class="btn" onclick="playMemory('${gradeId}', ${unit.id})">🧠 משחק זיכרון</button>
                      <button class="btn" onclick="playQuiz('${gradeId}', ${unit.id})">❓ חידון</button>
                      <button class="btn" onclick="playMatch('${gradeId}', ${unit.id})">🎯 התאמה</button>
                      <button class="btn" onclick="practiceUnit('${gradeId}', ${unit.id})">📖 תרגול</button>
                    </div>
                  </div>
                `).join('')}
              `;
            }

            function renderProfile(container) {
              container.innerHTML = `
                <h1>👤 פרופיל אישי</h1>
                
                <div style="background: linear-gradient(135deg, #667eea, #764ba2); color: white; padding: 30px; border-radius: 20px; text-align: center; margin: 20px 0;">
                  <img src="avatar1.png" style="width: 100px; height: 100px; border-radius: 50%; border: 4px solid white; object-fit: cover;">
                  <h2 style="margin: 15px 0;">${PROFILE.name}</h2>
                  <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 20px; margin-top: 20px;">
                    <div>
                      <div style="font-size: 2rem;">⭐</div>
                      <div>${PROFILE.xp} נקודות</div>
                    </div>
                    <div>
                      <div style="font-size: 2rem;">📚</div>
                      <div>${PROFILE.completedUnits.length} יחידות הושלמו</div>
                    </div>
                    <div>
                      <div style="font-size: 2rem;">🏆</div>
                      <div>${PROFILE.rewards.length} פרסים</div>
                    </div>
                  </div>
                </div>
                
                <div style="text-align: center;">
                  <button class="btn" onclick="showHome()">🏠 חזור לדף הבית</button>
                  <button class="btn" onclick="downloadProfile()">💾 גיבוי פרופיל</button>
                </div>
              `;
            }

            // Navigation functions
            function showHome() {
              currentView = 'home';
              render();
            }

            function showGrade(gradeId) {
              currentView = 'grade';
              currentGrade = gradeId;
              render();
            }

            function showProfile() {
              currentView = 'profile';
              render();
            }

            function showStats() {
              alert(`📊 סטטיסטיקות:\n\n• 6 כיתות זמינות\n• 36 יחידות סה"כ\n• 432 מילים ללמידה\n• נקודות: ${PROFILE.xp}\n• יחידות הושלמו: ${PROFILE.completedUnits.length}`);
            }

            // Game functions
            function playMemory(gradeId, unitId) {
              const grade = CONTENT.grades.find(g => g.id === gradeId);
              const unit = grade.units.find(u => u.id === unitId);
              alert(`🧠 משחק זיכרון!\n\nמילים ביחידה ${unitId}:\n${unit.words.join(', ')}\n\n🎮 זהו דמו - המשחק המלא יהיה זמין בקרוב!`);
            }

            function playQuiz(gradeId, unitId) {
              const grade = CONTENT.grades.find(g => g.id === gradeId);
              const unit = grade.units.find(u => u.id === unitId);
              const randomWord = unit.words[Math.floor(Math.random() * unit.words.length)];
              const answer = prompt(`❓ חידון!\n\nמה המשמעות של המילה: "${randomWord}"?\n\nהכנס את התשובה:`);
              alert(`🎯 תשובתך: "${answer}"\n\nכל הכבוד על הניסיון!\n+10 נקודות`);
              PROFILE.xp += 10;
            }

            function playMatch(gradeId, unitId) {
              const grade = CONTENT.grades.find(g => g.id === gradeId);
              const unit = grade.units.find(u => u.id === unitId);
              alert(`🎯 משחק התאמה!\n\nיחידה ${unitId} - ${grade.name}\n\nהתאם בין המילים האנגליות לתרגום העברי:\n${unit.words.slice(0,6).join(', ')}\n\n🎮 זהו דמו - המשחק המלא יהיה זמין בקרוב!`);
            }

            function practiceUnit(gradeId, unitId) {
              const grade = CONTENT.grades.find(g => g.id === gradeId);
              const unit = grade.words.find(u => u.id === unitId);
              PROFILE.completedUnits.push(`${gradeId}-${unitId}`);
              PROFILE.xp += 25;
              alert(`📖 תרגול הושלם!\n\n✅ יחידה ${unitId} ב${grade.name} הושלמה\n🎉 +25 נקודות\n⭐ סה"כ נקודות: ${PROFILE.xp}`);
            }

            function pronounceWord(word) {
              if ('speechSynthesis' in window) {
                const utterance = new SpeechSynthesisUtterance(word);
                utterance.lang = 'en-US';
                speechSynthesis.speak(utterance);
              }
              alert(`🔊 מילה: ${word}\n\n💡 האזן להגייה ונסה לחזור!`);
            }

            function downloadProfile() {
              const data = JSON.stringify(PROFILE, null, 2);
              const blob = new Blob([data], {type: 'application/json'});
              const url = URL.createObjectURL(blob);
              const a = document.createElement('a');
              a.href = url;
              a.download = 'abc-profile.json';
              a.click();
              alert('💾 פרופיל יורד...');
            }

            // Utility function
            function adjustColor(color) {
              // Simple color adjustment for gradient
              return color.replace('#', '#').substring(0, 7) + '80';
            }

            // Initialize app
            render();
            </script>
          </body>
          </html>
          EOF

      - name: Setup Github Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact for Github Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to Github Pages
        id: deploy
        uses: actions/deploy-pages@v4
