name: ABC English Explorer - Full Bootstrap

on:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  full-build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Clean repo except .git and .github
        run: |
          find . -mindepth 1 -maxdepth 1 ! -name '.git' ! -name '.github' -exec rm -rf {} +

      - name: Create folders
        run: |
          mkdir -p assets/images assets/icons assets/sounds
          mkdir -p lessons/grade1 lessons/grade2 lessons/grade3 lessons/grade4 lessons/grade5 lessons/grade6
          mkdir -p css js components games

      - name: Create index.html
        run: |
          cat > index.html <<EOF
<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>ABC English Explorer v3.0</title>
  <link rel="manifest" href="manifest.json" />
</head>
<body>
  <div style="text-align:center; padding: 5em;">
    <div style="font-size:4em;">🤖</div>
    <h1>ABC English Explorer v3.0</h1>
    <p>ברוכים הבאים! כאן מתחילים ללמוד עם 5 שיעורים ראשונים.</p>
  </div>
</body>
</html>
EOF

      - name: Create manifest.json
        run: |
          cat > manifest.json <<EOF
{
  "name": "ABC English Explorer v3.0",
  "short_name": "ABC Explorer",
  "start_url": "/",
  "display": "standalone",
  "background_color": "#4fc3f7",
  "theme_color": "#4fc3f7",
  "lang": "he",
  "dir": "rtl",
  "orientation": "portrait-primary",
  "icons": [
    {
      "src": "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 192 192'%3E%3Crect width='192' height='192' fill='%234FC3F7' rx='35' /%3E%3Ctext x='96' y='135' font-size='110' text-anchor='middle' fill='white'%3E%F0%9F%A4%96%3C/text%3E%3C/svg%3E",
      "sizes": "192x192",
      "type": "image/svg+xml"
    }
  ]
}
EOF

      - name: Create sw.js (service worker)
        run: |
          cat > sw.js <<EOF
const CACHE_NAME = 'abc-explorer-v3.0-cache';
const URLS_TO_CACHE = ['/', '/index.html', '/manifest.json'];
self.addEventListener('install', event => {
  event.waitUntil(caches.open(CACHE_NAME).then(cache => cache.addAll(URLS_TO_CACHE)).then(() => self.skipWaiting()));
});
self.addEventListener('activate', event => {
  event.waitUntil(caches.keys()
    .then(keys => Promise.all(keys.filter(k => k !== CACHE_NAME).map(k => caches.delete(k))))
    .then(() => self.clients.claim())
  );
});
self.addEventListener('fetch', event => {
  event.respondWith(caches.match(event.request).then(response => response || fetch(event.request)));
});
EOF

      - name: Create 5 initial lessons
        run: |
          mkdir -p lessons/grade1
          cat > lessons/grade1/lesson1.json <<EOF
{
  "id": "grade1_lesson1",
  "title": "ABC - האותיות הראשונות",
  "grade": 1,
  "vocabulary": [
    {"word": "Apple", "hebrew": "תפוח"},
    {"word": "Ball", "hebrew": "כדור"},
    {"word": "Cat", "hebrew": "חתול"}
  ]
}
EOF
          cat > lessons/grade1/lesson2.json <<EOF
{
  "id": "grade1_lesson2",
  "title": "DEF - ממשיכים ללמוד",
  "grade": 1,
  "vocabulary": [
    {"word": "Dog", "hebrew": "כלב"},
    {"word": "Egg", "hebrew": "ביצה"},
    {"word": "Fish", "hebrew": "דג"}
  ]
}
EOF
          cat > lessons/grade1/lesson3.json <<EOF
{
  "id": "grade1_lesson3",
  "title": "Numbers 1-5",
  "grade": 1,
  "vocabulary": [
    {"word": "One", "hebrew": "אחד"},
    {"word": "Two", "hebrew": "שניים"},
    {"word": "Three", "hebrew": "שלושה"},
    {"word": "Four", "hebrew": "ארבעה"},
    {"word": "Five", "hebrew": "חמישה"}
  ]
}
EOF
          cat > lessons/grade1/lesson4.json <<EOF
{
  "id": "grade1_lesson4",
  "title": "Colors",
  "grade": 1,
  "vocabulary": [
    {"word": "Red", "hebrew": "אדום"},
    {"word": "Blue", "hebrew": "כחול"},
    {"word": "Green", "hebrew": "ירוק"},
    {"word": "Yellow", "hebrew": "צהוב"}
  ]
}
EOF
          cat > lessons/grade1/lesson5.json <<EOF
{
  "id": "grade1_lesson5",
  "title": "My Body",
  "grade": 1,
  "vocabulary": [
    {"word": "Head", "hebrew": "ראש"},
    {"word": "Eyes", "hebrew": "עיניים"},
    {"word": "Nose", "hebrew": "אף"},
    {"word": "Mouth", "hebrew": "פה"},
    {"word": "Hands", "hebrew": "ידיים"}
  ]
}
EOF

      - name: Commit & push all content
        run: |
          git config user.email "bot@example.com"
          git config user.name "Bot"
          git add .
          git commit -m "🚀 Bootstrap complete with initial content"
          git push

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact for pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      - name: Success message
        run: echo "🎉 Site deployed successfully!"
